# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.4'
          bundler-cache: true
      - name: Install dependencies
        run: bundle install
      # Add or replace database setup steps here
      - name: Set up SQLite database
        run: |
          bin/rails db:create RAILS_ENV=test
          bin/rails db:schema:load RAILS_ENV=test
      # Add or replace test runners here
      - name: Run tests
        run: bundle exec rspec
      - name: Run cucumber tests
        run: bundle exec cucumber

      - name: Check code coverage
        run: |
          COVERAGE=(grep -Eo '(\d+\.\d+)' coverage/.last_run.json)
          echo "Current coverage is $COVERAGE"
          REQUIRED_COVERAGE=90
          if (( $(echo "$COVERAGE < $REQUIRED_COVERAGE" | bc -l) )); then
            echo "Code coverage ($COVERAGE%) is below the threshold of $REQUIRED_COVERAGE%" && exit 1
          else
            echo "Code coverage ($COVERAGE%) meets the required threshold."
          fi

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.4'
          bundler-cache: true
      - name: Lint code for consistent style
        run: |
          bundle exec rubocop --format progress || echo 'Rubocop finished with warnings'
